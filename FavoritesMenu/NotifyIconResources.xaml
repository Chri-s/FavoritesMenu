<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                    xmlns:local="clr-namespace:FavoritesMenu"
                    xmlns:localBehaviors="clr-namespace:FavoritesMenu.Behaviors">

    <local:ImageSourceToImageConverter x:Key="ImageConverter" />

    <local:EscapeAccessKeyConverter x:Key="EscapeConverter" />

    <ContextMenu x:Key="SysTrayMenu" x:Shared="false" ItemsSource="{Binding Items}">
        <ContextMenu.ItemContainerStyle>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Header" Value="{Binding DisplayName,Converter={StaticResource EscapeConverter}}" />
                <Setter Property="ItemsSource" Value="{Binding Path=SubItems}" />
                <Setter Property="Icon" Value="{Binding ImageSource, Converter={StaticResource ImageConverter}}" />

                <Setter Property="Command" Value="{Binding DataContext.OpenItemCommand,RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Setter Property="CommandParameter" Value="{Binding}" />

                <Setter Property="localBehaviors:RightClickBehaviors.Command" Value="{Binding DataContext.OpenContextMenuCommand,RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                <Setter Property="localBehaviors:RightClickBehaviors.CommandParameter" Value="{Binding}" />
            </Style>
        </ContextMenu.ItemContainerStyle>
    </ContextMenu>

    <!--  This is copied from the Wpf.UI TextBlock style.
          If a text contains an underscore ("_"), the TextBlock is replaced with AccessText.
          Wpf.Ui doesn't style the AccessText so has another look than text without underscore.
          This gives AccessText the same look as TextBlock. -->
    <Style TargetType="{x:Type AccessText}">

        <!--<Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>-->

        <!--  The Display option causes a large aliasing effect  -->
        <!--<Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <ContextMenu x:Key="RightClickMenu" x:Shared="false">
        <MenuItem Header="Refresh" Command="{Binding RefreshItemsCommand}" />
        <MenuItem Header="Settings" Command="{Binding ShowSettingsCommand}" />
        <MenuItem Header="About" Command="{Binding ShowAboutWindowCommand}" />
        <Separator />
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>

    <tb:TaskbarIcon
            x:Key="NotifyIcon"
            IconSource="/Notify.ico"
            ToolTipText="Favorites Menu"
            NoLeftClickDelay="True"
            MenuActivation="LeftClick"
            localBehaviors:RightClickBehaviors.TrayRightClickContextMenu="{StaticResource RightClickMenu}"
            ContextMenu="{StaticResource SysTrayMenu}">
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
</ResourceDictionary>